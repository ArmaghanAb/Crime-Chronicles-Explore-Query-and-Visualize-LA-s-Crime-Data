{"ast":null,"code":"var _jsxFileName = \"/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartComponent({\n  chartData,\n  chartType\n}) {\n  //   const getChartOptions = (type) => {\n  //     switch (type) {\n  //       case 'pie':\n  //         return {\n  //           chart: {\n  //             type: 'pie',\n  //           },\n  //           title: {\n  //             text: chartData.title, // Use title from chartData\n  //           },\n  //           series: [{\n  //             name: 'Crime Type',\n  //             data: chartData.labels.map((label, index) => ({\n  //               name: label,\n  //               y: chartData.datasets[0].data[index],\n  //             })),\n  //           }],\n  //         };\n  //       case 'line':\n  //         return {\n  //           chart: {\n  //             type: 'line',\n  //           },\n  //           title: {\n  //             text: chartData.title, // Use title from chartData\n  //           },\n  //           xAxis: {\n  //             categories: chartData.labels,\n  //           },\n  //           yAxis: {\n  //             title: {\n  //               text: 'Crime Count',\n  //             },\n  //           },\n  //           series: [{\n  //             name: 'Crime Count',\n  //             data: chartData.datasets[0].data,\n  //           }],\n  //         };\n  //       case 'bar':\n  //         return {\n  //           chart: {\n  //             type: 'bar',\n  //           },\n  //           title: {\n  //             text: chartData.title, // Use title from chartData\n  //           },\n  //           xAxis: {\n  //             categories: chartData.labels,\n  //           },\n  //           yAxis: {\n  //             title: {\n  //               text: 'Crime Count',\n  //             },\n  //           },\n  //           series: [{\n  //             name: 'Crime Count',\n  //             data: chartData.datasets[0].data,\n  //           }],\n  //         };\n  //       default:\n  //         return {};\n  //     }\n  //   };\n\n  const getChartOptions = () => {\n    const animationSettings = {\n      duration: 1000,\n      // Duration for transitions\n      easing: 'easeInOutQuad' // Smooth easing\n    };\n    return {\n      chart: {\n        type: chartType,\n        // Use chartType directly\n        animation: animationSettings // Add animation settings\n      },\n      title: {\n        text: chartData.title // Title from chartData\n      },\n      xAxis: chartType !== 'pie' ? {\n        // Only for non-pie charts\n        categories: chartData.labels\n      } : undefined,\n      yAxis: chartType !== 'pie' ? {\n        // Only for non-pie charts\n        title: {\n          text: 'Crime Count'\n        }\n      } : undefined,\n      series: [{\n        name: chartType === 'pie' ? 'Crime Type' : 'Crime Count',\n        // Series name changes based on chartType\n        data: chartType === 'pie' ? chartData.labels.map((label, index) => ({\n          name: label,\n          y: chartData.datasets[0].data[index]\n        })) : chartData.datasets[0].data,\n        // For bar/line, use raw data\n        animation: animationSettings // Series-specific animation\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      marginInline: 'auto',\n      borderRadius: '15px',\n      overflow: 'hidden',\n      border: 'solid 2px #272626',\n      padding: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: getChartOptions(chartType) // Pass the options dynamically based on the selected chart type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","ChartComponent","chartData","chartType","getChartOptions","animationSettings","duration","easing","chart","type","animation","title","text","xAxis","categories","labels","undefined","yAxis","series","name","data","map","label","index","y","datasets","style","width","marginInline","borderRadius","overflow","border","padding","children","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js"],"sourcesContent":["import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction ChartComponent({ chartData, chartType }) {\n    \n//   const getChartOptions = (type) => {\n//     switch (type) {\n//       case 'pie':\n//         return {\n//           chart: {\n//             type: 'pie',\n//           },\n//           title: {\n//             text: chartData.title, // Use title from chartData\n//           },\n//           series: [{\n//             name: 'Crime Type',\n//             data: chartData.labels.map((label, index) => ({\n//               name: label,\n//               y: chartData.datasets[0].data[index],\n//             })),\n//           }],\n//         };\n//       case 'line':\n//         return {\n//           chart: {\n//             type: 'line',\n//           },\n//           title: {\n//             text: chartData.title, // Use title from chartData\n//           },\n//           xAxis: {\n//             categories: chartData.labels,\n//           },\n//           yAxis: {\n//             title: {\n//               text: 'Crime Count',\n//             },\n//           },\n//           series: [{\n//             name: 'Crime Count',\n//             data: chartData.datasets[0].data,\n//           }],\n//         };\n//       case 'bar':\n//         return {\n//           chart: {\n//             type: 'bar',\n//           },\n//           title: {\n//             text: chartData.title, // Use title from chartData\n//           },\n//           xAxis: {\n//             categories: chartData.labels,\n//           },\n//           yAxis: {\n//             title: {\n//               text: 'Crime Count',\n//             },\n//           },\n//           series: [{\n//             name: 'Crime Count',\n//             data: chartData.datasets[0].data,\n//           }],\n//         };\n//       default:\n//         return {};\n//     }\n//   };\n\nconst getChartOptions = () => {\n    const animationSettings = {\n      duration: 1000, // Duration for transitions\n      easing: 'easeInOutQuad', // Smooth easing\n    };\n\n    return {\n      chart: {\n        type: chartType, // Use chartType directly\n        animation: animationSettings, // Add animation settings\n      },\n      title: {\n        text: chartData.title, // Title from chartData\n      },\n      xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n        categories: chartData.labels,\n      } : undefined,\n      yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n        title: {\n          text: 'Crime Count',\n        },\n      } : undefined,\n      series: [{\n        name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n        data: chartType === 'pie'\n          ? chartData.labels.map((label, index) => ({\n              name: label,\n              y: chartData.datasets[0].data[index],\n            }))\n          : chartData.datasets[0].data, // For bar/line, use raw data\n        animation: animationSettings, // Series-specific animation\n      }],\n    };\n  };\n\n\n  return (\n    <div style={{\n        width: '80%',\n        marginInline: 'auto',\n        borderRadius: '15px',\n        overflow: 'hidden',\n        border: 'solid 2px #272626', \n        padding: '1rem',\n    }}>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={getChartOptions(chartType)} // Pass the options dynamically based on the selected chart type\n      />\n    </div>\n  );\n}\n\nexport default ChartComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,cAAcA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAElD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,iBAAiB,GAAG;MACxBC,QAAQ,EAAE,IAAI;MAAE;MAChBC,MAAM,EAAE,eAAe,CAAE;IAC3B,CAAC;IAED,OAAO;MACLC,KAAK,EAAE;QACLC,IAAI,EAAEN,SAAS;QAAE;QACjBO,SAAS,EAAEL,iBAAiB,CAAE;MAChC,CAAC;MACDM,KAAK,EAAE;QACLC,IAAI,EAAEV,SAAS,CAACS,KAAK,CAAE;MACzB,CAAC;MACDE,KAAK,EAAEV,SAAS,KAAK,KAAK,GAAG;QAAE;QAC7BW,UAAU,EAAEZ,SAAS,CAACa;MACxB,CAAC,GAAGC,SAAS;MACbC,KAAK,EAAEd,SAAS,KAAK,KAAK,GAAG;QAAE;QAC7BQ,KAAK,EAAE;UACLC,IAAI,EAAE;QACR;MACF,CAAC,GAAGI,SAAS;MACbE,MAAM,EAAE,CAAC;QACPC,IAAI,EAAEhB,SAAS,KAAK,KAAK,GAAG,YAAY,GAAG,aAAa;QAAE;QAC1DiB,IAAI,EAAEjB,SAAS,KAAK,KAAK,GACrBD,SAAS,CAACa,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;UACtCJ,IAAI,EAAEG,KAAK;UACXE,CAAC,EAAEtB,SAAS,CAACuB,QAAQ,CAAC,CAAC,CAAC,CAACL,IAAI,CAACG,KAAK;QACrC,CAAC,CAAC,CAAC,GACHrB,SAAS,CAACuB,QAAQ,CAAC,CAAC,CAAC,CAACL,IAAI;QAAE;QAChCV,SAAS,EAAEL,iBAAiB,CAAE;MAChC,CAAC;IACH,CAAC;EACH,CAAC;EAGD,oBACEL,OAAA;IAAK0B,KAAK,EAAE;MACRC,KAAK,EAAE,KAAK;MACZC,YAAY,EAAE,MAAM;MACpBC,YAAY,EAAE,MAAM;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE,mBAAmB;MAC3BC,OAAO,EAAE;IACb,CAAE;IAAAC,QAAA,eACAjC,OAAA,CAACF,eAAe;MACdoC,UAAU,EAAErC,UAAW;MACvBsC,OAAO,EAAE/B,eAAe,CAACD,SAAS,CAAE,CAAC;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAtHQvC,cAAc;AAwHvB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}