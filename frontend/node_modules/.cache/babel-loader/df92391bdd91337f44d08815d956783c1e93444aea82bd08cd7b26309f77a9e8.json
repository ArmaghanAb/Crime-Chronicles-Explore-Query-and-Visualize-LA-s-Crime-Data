{"ast":null,"code":"var _jsxFileName = \"/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n//   const [key, setKey] = useState(0); // Add a key to force reinitialization of the chart\n\n//   const getChartOptions = () => ({\n//     chart: {\n//       type: chartType, // Use chartType directly\n//       animation: false, // Disable transition animation when chart type changes\n//     },\n//     title: {\n//       text: chartData.title, // Title from chartData\n//     },\n//     xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//       categories: chartData.labels,\n//     } : undefined,\n//     yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//       title: {\n//         text: 'Crime Count',\n//       },\n//     } : undefined,\n//     series: [{\n//       name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//       data: chartType === 'pie'\n//         ? chartData.labels.map((label, index) => ({\n//             name: label,\n//             y: chartData.datasets[0].data[index],\n//           }))\n//         : chartData.datasets[0].data, // For bar/line, use raw data\n//     }],\n//     plotOptions: {\n//       series: {\n//         animation: { duration: 1000 }, // Animate data points when chart is rendered\n//       },\n//     },\n//   });\n\n//   // Force chart reinitialization when chartType changes\n//   React.useEffect(() => {\n//     setKey((prevKey) => prevKey + 1); // Increment key to trigger re-render\n//   }, [chartType]);\n\n//   return (\n//     <div\n//       style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626',\n//         padding: '1rem',\n//       }}\n//     >\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions()}\n//         key={key} // Use the key to force HighchartsReact to reinitialize\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;\n\nimport React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartComponent({\n  chartData,\n  chartType\n}) {\n  _s();\n  const [chartOptions, setChartOptions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    const timeout = setTimeout(() => {\n      setChartOptions({\n        chart: {\n          type: chartType,\n          animation: {\n            duration: 800 // Animate data points\n          }\n        },\n        title: {\n          text: chartData.title\n        },\n        xAxis: chartType !== 'pie' ? {\n          categories: chartData.labels\n        } : undefined,\n        yAxis: chartType !== 'pie' ? {\n          title: {\n            text: 'Crime Count'\n          }\n        } : undefined,\n        series: [{\n          name: chartType === 'pie' ? 'Crime Type' : 'Crime Count',\n          data: chartType === 'pie' ? chartData.labels.map((label, index) => ({\n            name: label,\n            y: chartData.datasets[0].data[index]\n          })) : chartData.datasets[0].data\n        }]\n      });\n      setLoading(false);\n    }, 100);\n    return () => clearTimeout(timeout);\n  }, [chartType, chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      height: 'fit-content',\n      // Set a fixed height for consistent layout\n      marginInline: 'auto',\n      borderRadius: '15px',\n      overflow: 'hidden',\n      border: 'solid 2px #272626',\n      padding: '1rem'\n    },\n    children: loading ?\n    /*#__PURE__*/\n    // Display a loader or a placeholder while loading\n    _jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#aaa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartComponent, \"6RgFzZiGbbJet9OExrrIK0hPxsA=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","ChartComponent","chartData","chartType","_s","chartOptions","setChartOptions","loading","setLoading","timeout","setTimeout","chart","type","animation","duration","title","text","xAxis","categories","labels","undefined","yAxis","series","name","data","map","label","index","y","datasets","clearTimeout","style","width","height","marginInline","borderRadius","overflow","border","padding","children","backgroundColor","display","alignItems","justifyContent","color","fileName","_jsxFileName","lineNumber","columnNumber","highcharts","options","_c","$RefreshReg$"],"sources":["/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n//   const [key, setKey] = useState(0); // Add a key to force reinitialization of the chart\n\n//   const getChartOptions = () => ({\n//     chart: {\n//       type: chartType, // Use chartType directly\n//       animation: false, // Disable transition animation when chart type changes\n//     },\n//     title: {\n//       text: chartData.title, // Title from chartData\n//     },\n//     xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//       categories: chartData.labels,\n//     } : undefined,\n//     yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//       title: {\n//         text: 'Crime Count',\n//       },\n//     } : undefined,\n//     series: [{\n//       name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//       data: chartType === 'pie'\n//         ? chartData.labels.map((label, index) => ({\n//             name: label,\n//             y: chartData.datasets[0].data[index],\n//           }))\n//         : chartData.datasets[0].data, // For bar/line, use raw data\n//     }],\n//     plotOptions: {\n//       series: {\n//         animation: { duration: 1000 }, // Animate data points when chart is rendered\n//       },\n//     },\n//   });\n\n//   // Force chart reinitialization when chartType changes\n//   React.useEffect(() => {\n//     setKey((prevKey) => prevKey + 1); // Increment key to trigger re-render\n//   }, [chartType]);\n\n//   return (\n//     <div\n//       style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626',\n//         padding: '1rem',\n//       }}\n//     >\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions()}\n//         key={key} // Use the key to force HighchartsReact to reinitialize\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;\n\nimport React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction ChartComponent({ chartData, chartType }) {\n  const [chartOptions, setChartOptions] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const timeout = setTimeout(() => {\n      setChartOptions({\n        chart: {\n          type: chartType,\n          animation: {\n            duration: 800, // Animate data points\n          },\n        },\n        title: {\n          text: chartData.title,\n        },\n        xAxis: chartType !== 'pie' ? {\n          categories: chartData.labels,\n        } : undefined,\n        yAxis: chartType !== 'pie' ? {\n          title: {\n            text: 'Crime Count',\n          },\n        } : undefined,\n        series: [{\n          name: chartType === 'pie' ? 'Crime Type' : 'Crime Count',\n          data: chartType === 'pie'\n            ? chartData.labels.map((label, index) => ({\n                name: label,\n                y: chartData.datasets[0].data[index],\n              }))\n            : chartData.datasets[0].data,\n        }],\n      });\n      setLoading(false);\n    }, 100);\n\n    return () => clearTimeout(timeout);\n  }, [chartType, chartData]);\n\n  return (\n    <div style={{\n      width: '80%',\n      height: 'fit-content', // Set a fixed height for consistent layout\n      marginInline: 'auto',\n      borderRadius: '15px',\n      overflow: 'hidden',\n      border: 'solid 2px #272626', \n      padding: '1rem',\n      \n    }}>\n      {loading ? (\n        // Display a loader or a placeholder while loading\n        <div style={{\n          width: '100%',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: '#aaa',\n        }}>\n          {/* Loading chart... */}\n        </div>\n      ) : (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={chartOptions}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}