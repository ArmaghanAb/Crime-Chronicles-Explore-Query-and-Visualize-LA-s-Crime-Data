{"ast":null,"code":"var _jsxFileName = \"/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n\n// const getChartOptions = () => {\n//     // const animationSettings = {\n//     //   duration: 1000, // Duration for transitions\n//     //   easing: 'easeInOutQuad', // Smooth easing\n//     // };\n\n//     return {\n//       chart: {\n//         type: chartType, // Use chartType directly\n//         // animation: animationSettings, // Add animation settings\n//       },\n//       title: {\n//         text: chartData.title, // Title from chartData\n//       },\n//       xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         categories: chartData.labels,\n//       } : undefined,\n//       yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         title: {\n//           text: 'Crime Count',\n//         },\n//       } : undefined,\n//       series: [{\n//         name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//         data: chartType === 'pie'\n//           ? chartData.labels.map((label, index) => ({\n//               name: label,\n//               y: chartData.datasets[0].data[index],\n//             }))\n//           : chartData.datasets[0].data, // For bar/line, use raw data\n//       }],\n//     };\n//   };\n\n//   return (\n//     <div style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626', \n//         padding: '1rem',\n//     }}>\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions(chartType)} // Pass the options dynamically based on the selected chart type\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;\n\nimport React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartComponent({\n  chartData,\n  chartType\n}) {\n  _s();\n  const [renderOptions, setRenderOptions] = useState(null);\n  const getChartOptions = () => ({\n    chart: {\n      type: chartType\n    },\n    title: {\n      text: chartData.title\n    },\n    xAxis: chartType !== 'pie' ? {\n      categories: chartData.labels\n    } : undefined,\n    yAxis: chartType !== 'pie' ? {\n      title: {\n        text: 'Crime Count'\n      }\n    } : undefined,\n    series: [{\n      name: chartType === 'pie' ? 'Crime Type' : 'Crime Count',\n      data: chartType === 'pie' ? chartData.labels.map((label, index) => ({\n        name: label,\n        y: chartData.datasets[0].data[index]\n      })) : chartData.datasets[0].data\n    }],\n    plotOptions: {\n      series: {\n        animation: {\n          duration: 1000\n        } // Animate data points\n      }\n    }\n  });\n\n  // Update options when chartType changes\n  useEffect(() => {\n    // Delay the rendering to synchronize animation\n    const timer = setTimeout(() => {\n      setRenderOptions(getChartOptions());\n    }, 50); // Add a small delay to avoid intermediate rendering\n\n    return () => clearTimeout(timer); // Cleanup the timer on unmount or type change\n  }, [chartType, chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      marginInline: 'auto',\n      borderRadius: '15px',\n      overflow: 'hidden',\n      border: 'solid 2px #272626',\n      padding: '1rem'\n    },\n    children: renderOptions && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: renderOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartComponent, \"AVsRIKrKY03a4q/pH+8OIzhfzcc=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","ChartComponent","chartData","chartType","_s","renderOptions","setRenderOptions","getChartOptions","chart","type","title","text","xAxis","categories","labels","undefined","yAxis","series","name","data","map","label","index","y","datasets","plotOptions","animation","duration","timer","setTimeout","clearTimeout","style","width","marginInline","borderRadius","overflow","border","padding","children","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js"],"sourcesContent":["// import React from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n    \n// const getChartOptions = () => {\n//     // const animationSettings = {\n//     //   duration: 1000, // Duration for transitions\n//     //   easing: 'easeInOutQuad', // Smooth easing\n//     // };\n\n//     return {\n//       chart: {\n//         type: chartType, // Use chartType directly\n//         // animation: animationSettings, // Add animation settings\n//       },\n//       title: {\n//         text: chartData.title, // Title from chartData\n//       },\n//       xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         categories: chartData.labels,\n//       } : undefined,\n//       yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         title: {\n//           text: 'Crime Count',\n//         },\n//       } : undefined,\n//       series: [{\n//         name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//         data: chartType === 'pie'\n//           ? chartData.labels.map((label, index) => ({\n//               name: label,\n//               y: chartData.datasets[0].data[index],\n//             }))\n//           : chartData.datasets[0].data, // For bar/line, use raw data\n//       }],\n//     };\n//   };\n\n\n//   return (\n//     <div style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626', \n//         padding: '1rem',\n//     }}>\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions(chartType)} // Pass the options dynamically based on the selected chart type\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;\n\n\nimport React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction ChartComponent({ chartData, chartType }) {\n  const [renderOptions, setRenderOptions] = useState(null);\n\n  const getChartOptions = () => ({\n    chart: {\n      type: chartType,\n    },\n    title: {\n      text: chartData.title,\n    },\n    xAxis: chartType !== 'pie' ? {\n      categories: chartData.labels,\n    } : undefined,\n    yAxis: chartType !== 'pie' ? {\n      title: {\n        text: 'Crime Count',\n      },\n    } : undefined,\n    series: [{\n      name: chartType === 'pie' ? 'Crime Type' : 'Crime Count',\n      data: chartType === 'pie'\n        ? chartData.labels.map((label, index) => ({\n            name: label,\n            y: chartData.datasets[0].data[index],\n          }))\n        : chartData.datasets[0].data,\n    }],\n    plotOptions: {\n      series: {\n        animation: { duration: 1000 }, // Animate data points\n      },\n    },\n  });\n\n  // Update options when chartType changes\n  useEffect(() => {\n    // Delay the rendering to synchronize animation\n    const timer = setTimeout(() => {\n      setRenderOptions(getChartOptions());\n    }, 50); // Add a small delay to avoid intermediate rendering\n\n    return () => clearTimeout(timer); // Cleanup the timer on unmount or type change\n  }, [chartType, chartData]);\n\n  return (\n    <div\n      style={{\n        width: '80%',\n        marginInline: 'auto',\n        borderRadius: '15px',\n        overflow: 'hidden',\n        border: 'solid 2px #272626',\n        padding: '1rem',\n      }}\n    >\n      {renderOptions && (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={renderOptions}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ChartComponent;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,cAAcA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,eAAe,GAAGA,CAAA,MAAO;IAC7BC,KAAK,EAAE;MACLC,IAAI,EAAEN;IACR,CAAC;IACDO,KAAK,EAAE;MACLC,IAAI,EAAET,SAAS,CAACQ;IAClB,CAAC;IACDE,KAAK,EAAET,SAAS,KAAK,KAAK,GAAG;MAC3BU,UAAU,EAAEX,SAAS,CAACY;IACxB,CAAC,GAAGC,SAAS;IACbC,KAAK,EAAEb,SAAS,KAAK,KAAK,GAAG;MAC3BO,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC,GAAGI,SAAS;IACbE,MAAM,EAAE,CAAC;MACPC,IAAI,EAAEf,SAAS,KAAK,KAAK,GAAG,YAAY,GAAG,aAAa;MACxDgB,IAAI,EAAEhB,SAAS,KAAK,KAAK,GACrBD,SAAS,CAACY,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;QACtCJ,IAAI,EAAEG,KAAK;QACXE,CAAC,EAAErB,SAAS,CAACsB,QAAQ,CAAC,CAAC,CAAC,CAACL,IAAI,CAACG,KAAK;MACrC,CAAC,CAAC,CAAC,GACHpB,SAAS,CAACsB,QAAQ,CAAC,CAAC,CAAC,CAACL;IAC5B,CAAC,CAAC;IACFM,WAAW,EAAE;MACXR,MAAM,EAAE;QACNS,SAAS,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAE;MACjC;IACF;EACF,CAAC,CAAC;;EAEF;EACA/B,SAAS,CAAC,MAAM;IACd;IACA,MAAMgC,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BvB,gBAAgB,CAACC,eAAe,CAAC,CAAC,CAAC;IACrC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,OAAO,MAAMuB,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACzB,SAAS,EAAED,SAAS,CAAC,CAAC;EAE1B,oBACEF,OAAA;IACE+B,KAAK,EAAE;MACLC,KAAK,EAAE,KAAK;MACZC,YAAY,EAAE,MAAM;MACpBC,YAAY,EAAE,MAAM;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE,mBAAmB;MAC3BC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,EAEDjC,aAAa,iBACZL,OAAA,CAACF,eAAe;MACdyC,UAAU,EAAE1C,UAAW;MACvB2C,OAAO,EAAEnC;IAAc;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CA/DQH,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAiEvB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}