{"ast":null,"code":"// import React from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n\n// const getChartOptions = () => {\n//     // const animationSettings = {\n//     //   duration: 1000, // Duration for transitions\n//     //   easing: 'easeInOutQuad', // Smooth easing\n//     // };\n\n//     return {\n//       chart: {\n//         type: chartType, // Use chartType directly\n//         // animation: animationSettings, // Add animation settings\n//       },\n//       title: {\n//         text: chartData.title, // Title from chartData\n//       },\n//       xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         categories: chartData.labels,\n//       } : undefined,\n//       yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         title: {\n//           text: 'Crime Count',\n//         },\n//       } : undefined,\n//       series: [{\n//         name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//         data: chartType === 'pie'\n//           ? chartData.labels.map((label, index) => ({\n//               name: label,\n//               y: chartData.datasets[0].data[index],\n//             }))\n//           : chartData.datasets[0].data, // For bar/line, use raw data\n//       }],\n//     };\n//   };\n\n//   return (\n//     <div style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626', \n//         padding: '1rem',\n//     }}>\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions(chartType)} // Pass the options dynamically based on the selected chart type\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;","map":{"version":3,"names":[],"sources":["/Users/akashvegada/Desktop/Masters/sem3/cmpe280/Project/CrimeChronicles/Crime-Chronicles-Explore-Query-and-Visualize-LA-s-Crime-Data/src/components/ChartComponent.js"],"sourcesContent":["// import React from 'react';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// function ChartComponent({ chartData, chartType }) {\n    \n// const getChartOptions = () => {\n//     // const animationSettings = {\n//     //   duration: 1000, // Duration for transitions\n//     //   easing: 'easeInOutQuad', // Smooth easing\n//     // };\n\n//     return {\n//       chart: {\n//         type: chartType, // Use chartType directly\n//         // animation: animationSettings, // Add animation settings\n//       },\n//       title: {\n//         text: chartData.title, // Title from chartData\n//       },\n//       xAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         categories: chartData.labels,\n//       } : undefined,\n//       yAxis: chartType !== 'pie' ? { // Only for non-pie charts\n//         title: {\n//           text: 'Crime Count',\n//         },\n//       } : undefined,\n//       series: [{\n//         name: chartType === 'pie' ? 'Crime Type' : 'Crime Count', // Series name changes based on chartType\n//         data: chartType === 'pie'\n//           ? chartData.labels.map((label, index) => ({\n//               name: label,\n//               y: chartData.datasets[0].data[index],\n//             }))\n//           : chartData.datasets[0].data, // For bar/line, use raw data\n//       }],\n//     };\n//   };\n\n\n//   return (\n//     <div style={{\n//         width: '80%',\n//         marginInline: 'auto',\n//         borderRadius: '15px',\n//         overflow: 'hidden',\n//         border: 'solid 2px #272626', \n//         padding: '1rem',\n//     }}>\n//       <HighchartsReact\n//         highcharts={Highcharts}\n//         options={getChartOptions(chartType)} // Pass the options dynamically based on the selected chart type\n//       />\n//     </div>\n//   );\n// }\n\n// export default ChartComponent;\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}